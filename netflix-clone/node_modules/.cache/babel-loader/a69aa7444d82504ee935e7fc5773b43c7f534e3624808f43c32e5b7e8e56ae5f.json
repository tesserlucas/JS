{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucas\\\\netflix-clone\\\\src\\\\components\\\\MovieRow.jsx\",\n  _s = $RefreshSig$();\n// src/components/MovieRow.jsx\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport MovieCard from './MovieCard';\nimport './MovieRow.css'; // Estilize conforme necessário\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieRow = ({\n  title,\n  fetchUrl\n}) => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    };\n    fetchData();\n  }, [fetchUrl]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-row__posters\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n        movie: movie\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_s(MovieRow, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n_c = MovieRow;\nexport default MovieRow;\nvar _c;\n$RefreshReg$(_c, \"MovieRow\");","map":{"version":3,"names":["React","useEffect","useState","axios","MovieCard","jsxDEV","_jsxDEV","MovieRow","title","fetchUrl","_s","movies","setMovies","fetchData","request","get","data","results","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","movie","id","_c","$RefreshReg$"],"sources":["C:/Users/lucas/netflix-clone/src/components/MovieRow.jsx"],"sourcesContent":["// src/components/MovieRow.jsx\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport MovieCard from './MovieCard';\r\nimport './MovieRow.css'; // Estilize conforme necessário\r\n\r\nconst MovieRow = ({ title, fetchUrl }) => {\r\n    const [movies, setMovies] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const request = await axios.get(fetchUrl);\r\n            setMovies(request.data.results);\r\n            return request;\r\n        };\r\n        fetchData();\r\n    }, [fetchUrl]);\r\n\r\n    return (\r\n        <div className=\"movie-row\">\r\n            <h2>{title}</h2>\r\n            <div className=\"movie-row__posters\">\r\n                {movies.map(movie => (\r\n                    <MovieCard key={movie.id} movie={movie} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MovieRow;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAO,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACZ,MAAMY,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,MAAMC,OAAO,GAAG,MAAMX,KAAK,CAACY,GAAG,CAACN,QAAQ,CAAC;MACzCG,SAAS,CAACE,OAAO,CAACE,IAAI,CAACC,OAAO,CAAC;MAC/B,OAAOH,OAAO;IAClB,CAAC;IACDD,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,CAACJ,QAAQ,CAAC,CAAC;EAEd,oBACIH,OAAA;IAAKY,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtBb,OAAA;MAAAa,QAAA,EAAKX;IAAK;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChBjB,OAAA;MAAKY,SAAS,EAAC,oBAAoB;MAAAC,QAAA,EAC9BR,MAAM,CAACa,GAAG,CAACC,KAAK,iBACbnB,OAAA,CAACF,SAAS;QAAgBqB,KAAK,EAAEA;MAAM,GAAvBA,KAAK,CAACC,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CAC5C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACb,EAAA,CAtBIH,QAAQ;AAAAoB,EAAA,GAARpB,QAAQ;AAwBd,eAAeA,QAAQ;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}