{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucas\\\\netflix-clone\\\\src\\\\components\\\\MovieRow.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport MovieCard from './MovieCard';\nimport './MovieRow.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieRow = ({\n  title,\n  fetchUrl\n}) => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const request = await axios.get(fetchUrl);\n        console.log(request.data.results); // Verifique os dados no console\n        setMovies(request.data.results);\n      } catch (error) {\n        console.error('Error fetching data from TMDB:', error);\n      }\n    };\n    fetchData();\n  }, [fetchUrl]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-row__posters\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n        movie: movie\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieRow, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n_c = MovieRow;\nexport default MovieRow;\nvar _c;\n$RefreshReg$(_c, \"MovieRow\");","map":{"version":3,"names":["React","useEffect","useState","axios","MovieCard","jsxDEV","_jsxDEV","MovieRow","title","fetchUrl","_s","movies","setMovies","fetchData","request","get","console","log","data","results","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","movie","id","_c","$RefreshReg$"],"sources":["C:/Users/lucas/netflix-clone/src/components/MovieRow.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport MovieCard from './MovieCard';\r\nimport './MovieRow.css';\r\n\r\nconst MovieRow = ({ title, fetchUrl }) => {\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const request = await axios.get(fetchUrl);\r\n        console.log(request.data.results); // Verifique os dados no console\r\n        setMovies(request.data.results);\r\n      } catch (error) {\r\n        console.error('Error fetching data from TMDB:', error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [fetchUrl]);\r\n\r\n  return (\r\n    <div className=\"movie-row\">\r\n      <h2>{title}</h2>\r\n      <div className=\"movie-row__posters\">\r\n        {movies.map(movie => (\r\n          <MovieCard key={movie.id} movie={movie} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieRow;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMY,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,OAAO,GAAG,MAAMX,KAAK,CAACY,GAAG,CAACN,QAAQ,CAAC;QACzCO,OAAO,CAACC,GAAG,CAACH,OAAO,CAACI,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC;QACnCP,SAAS,CAACE,OAAO,CAACI,IAAI,CAACC,OAAO,CAAC;MACjC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdJ,OAAO,CAACI,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACxD;IACF,CAAC;IACDP,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACJ,QAAQ,CAAC,CAAC;EAEd,oBACEH,OAAA;IAAKe,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBhB,OAAA;MAAAgB,QAAA,EAAKd;IAAK;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChBpB,OAAA;MAAKe,SAAS,EAAC,oBAAoB;MAAAC,QAAA,EAChCX,MAAM,CAACgB,GAAG,CAACC,KAAK,iBACftB,OAAA,CAACF,SAAS;QAAgBwB,KAAK,EAAEA;MAAM,GAAvBA,KAAK,CAACC,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CAC1C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAChB,EAAA,CA1BIH,QAAQ;AAAAuB,EAAA,GAARvB,QAAQ;AA4Bd,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}