{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucas\\\\netflix-clone\\\\src\\\\pages\\\\SearchResultsPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport MovieCard from '../components/MovieCard';\nimport './SearchResultsPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchResultsPage = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n  useEffect(() => {\n    const query = new URLSearchParams(location.search).get('query');\n    if (query) {\n      const fetchSearchResults = async () => {\n        try {\n          const response = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=0050d63243a273e87495d98a2f4a614a&query=${query}`);\n          setMovies(response.data.results);\n        } catch (error) {\n          console.error('Error fetching search results:', error);\n        }\n      };\n      fetchSearchResults();\n    }\n  }, [location.search]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-results-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Search Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-results__movies\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n        movie: movie\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchResultsPage, \"3YK6vYLcR/UFFAd48RgOtE632XU=\", false, function () {\n  return [useLocation];\n});\n_c = SearchResultsPage;\nexport default SearchResultsPage;\nvar _c;\n$RefreshReg$(_c, \"SearchResultsPage\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","axios","MovieCard","jsxDEV","_jsxDEV","SearchResultsPage","_s","movies","setMovies","location","query","URLSearchParams","search","get","fetchSearchResults","response","data","results","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","movie","id","_c","$RefreshReg$"],"sources":["C:/Users/lucas/netflix-clone/src/pages/SearchResultsPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport MovieCard from '../components/MovieCard';\r\nimport './SearchResultsPage.css';\r\n\r\nconst SearchResultsPage = () => {\r\n  const [movies, setMovies] = useState([]);\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    const query = new URLSearchParams(location.search).get('query');\r\n    if (query) {\r\n      const fetchSearchResults = async () => {\r\n        try {\r\n          const response = await axios.get(\r\n            `https://api.themoviedb.org/3/search/movie?api_key=0050d63243a273e87495d98a2f4a614a&query=${query}`\r\n          );\r\n          setMovies(response.data.results);\r\n        } catch (error) {\r\n          console.error('Error fetching search results:', error);\r\n        }\r\n      };\r\n      fetchSearchResults();\r\n    }\r\n  }, [location.search]);\r\n\r\n  return (\r\n    <div className=\"search-results-page\">\r\n      <h2>Search Results</h2>\r\n      <div className=\"search-results__movies\">\r\n        {movies.map(movie => (\r\n          <MovieCard key={movie.id} movie={movie} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchResultsPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMU,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd,MAAMY,KAAK,GAAG,IAAIC,eAAe,CAACF,QAAQ,CAACG,MAAM,CAAC,CAACC,GAAG,CAAC,OAAO,CAAC;IAC/D,IAAIH,KAAK,EAAE;MACT,MAAMI,kBAAkB,GAAG,MAAAA,CAAA,KAAY;QACrC,IAAI;UACF,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACY,GAAG,CAC9B,4FAA4FH,KAAK,EACnG,CAAC;UACDF,SAAS,CAACO,QAAQ,CAACC,IAAI,CAACC,OAAO,CAAC;QAClC,CAAC,CAAC,OAAOC,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;QACxD;MACF,CAAC;MACDJ,kBAAkB,CAAC,CAAC;IACtB;EACF,CAAC,EAAE,CAACL,QAAQ,CAACG,MAAM,CAAC,CAAC;EAErB,oBACER,OAAA;IAAKgB,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClCjB,OAAA;MAAAiB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBrB,OAAA;MAAKgB,SAAS,EAAC,wBAAwB;MAAAC,QAAA,EACpCd,MAAM,CAACmB,GAAG,CAACC,KAAK,iBACfvB,OAAA,CAACF,SAAS;QAAgByB,KAAK,EAAEA;MAAM,GAAvBA,KAAK,CAACC,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CAC1C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACnB,EAAA,CA/BID,iBAAiB;EAAA,QAEJL,WAAW;AAAA;AAAA6B,EAAA,GAFxBxB,iBAAiB;AAiCvB,eAAeA,iBAAiB;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}